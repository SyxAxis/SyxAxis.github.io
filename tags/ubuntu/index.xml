<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ubuntu on SyxAxis</title>
    <link>https://SyxAxis.github.io/tags/ubuntu/</link>
    <description>Recent content in ubuntu on SyxAxis</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright Â© 2021, George Johnson; all rights reserved.</copyright>
    <lastBuildDate>Mon, 04 Jan 2021 07:47:22 +0000</lastBuildDate><atom:link href="https://SyxAxis.github.io/tags/ubuntu/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How-To : Build a Docker Host Using Ubuntu Server</title>
      <link>https://SyxAxis.github.io/post/04_build_ubuntu_docker_box/</link>
      <pubDate>Mon, 04 Jan 2021 07:47:22 +0000</pubDate>
      
      <guid>https://SyxAxis.github.io/post/04_build_ubuntu_docker_box/</guid>
      <description>
        
          &lt;p&gt;&lt;strong&gt;The easiest way to get an installation of Docker up and running is to run it on an virtualiased Ubuntu Server build in VirtualBox&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;virtualbox&#34;&gt;VirtualBox&lt;/h2&gt;
&lt;p&gt;For this demo I will be using Oracle&#39;s VirtualBox system to host the Ubuntu server as a Docker host. It&#39;s free and very easy to use.&lt;/p&gt;
&lt;p&gt;Simply install the latest version of Ubuntu server with bog standard defaults, but be sure to install two network interfaces into the VirtualBox host.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Interface 1 - NAT routable to the outside world - So you can download updates and packages plus Docker images.&lt;/li&gt;
&lt;li&gt;Interface 2 - Host-Only - While not mandatory it can be very useful for internal testing to have an interface back to your desktop/laptop box. Class C usually something like 192.168.56.0 network.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ubuntu-server&#34;&gt;Ubuntu Server&lt;/h2&gt;
&lt;p&gt;Installing the Ubuntu Server just install with defaults but you may wish to hardcode the host-only Class C address to 192.168.56.111 for example.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use /etc/hosts has the hostname matched to the host-only IP addresss&lt;/li&gt;
&lt;li&gt;Example netplan config YAML file is shown below, note the fixed IP address.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;# This is the network config written by &amp;#39;subiquity&amp;#39;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;network:
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;  ethernets:
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;    enp0s3:
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;      dhcp4: true
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;    enp0s8:
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;        addresses:
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;        - 192.168.56.111/24
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;        nameservers: {}
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;  version: 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ensure you do a full update from the source repos and reboot.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;apt-get update -y
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;apt-get upgrade -y
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;apt autoremove -y
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;install-the-docker-ce-from-the-official-docker-repo&#34;&gt;Install the Docker CE from the official Docker Repo&lt;/h2&gt;
&lt;p&gt;First we remove the Docker that might already be installed, update the local packages and then install the pre-requisite packages we&#39;ll need.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;sudo apt-get remove docker docker-engine docker.io
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;sudo apt-get update
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next we get the GPG key used to verify te Docker repo package can be trusted.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;curl -fsSLk https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next we need to register the Docker repo locally so we can get the packages down, there&#39;s two ways to do it. Either do it with a fixed reference but note this is version specific, I would only do this if you have to.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;sudo add-apt-repository &amp;#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The preferred option is to let the O/S find the right version.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;sudo add-apt-repository &amp;#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;If you find that you get certificate errors like &amp;quot;Certificate verification failed: The certificate is NOT trusted.&amp;quot;, especially if you&#39;re behind a proxy, then extract the proxy certificates ( do this using a browser like Firefox or Chrome ) and save them to &amp;quot;/usr/local/share/ca-certificates&amp;quot; then run &amp;quot;sudo update-ca-certificates&amp;quot;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now we&#39;re ready to install Docker from the official repo. This is a good time to add your user to the docker group so you can use docker commands without having to keep using sudo. You use sudo for all your root commands right, you&#39;d never login with root?!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;sudo apt-get update
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;sudo apt-get install docker-ce
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;sudo groupadd docker
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;sudo usermod -aG docker $USER
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Assuming it all went OK, just check the service came up:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;sudo systemctl status docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally test Docker is working, log out and log back in to make sure the privs take and then issue this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;docker run --rm hello-world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;using-docker-with-a-proxy-to-get-images&#34;&gt;Using Docker with a Proxy to get Images&lt;/h3&gt;
&lt;p&gt;If you&#39;re behind a proxy then do the following to get docker to work with a proxy.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;sudo mkdir /etc/systemd/system/docker.service.d
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;sudo vi /etc/systemd/system/docker.service.d/http-proxy.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Add this to the open file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;[Service]
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;Environment=&amp;#34;HTTP_PROXY=http://172.26.2.10:9480&amp;#34;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;Environment=&amp;#34;HTTPS_PROXY=http://172.26.2.10:9480&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then restart Docker.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;sudo systemctl daemon-reload
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;sudo sysyemctl stop docker
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;sudo sysyemctl start docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        
      </description>
    </item>
    
  </channel>
</rss>
